// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace UnMango.Pulumi.Pihole
{
    /// <summary>
    /// Manages a Pi-hole CNAME record
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Pihole = UnMango.Pulumi.Pihole;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var record = new Pihole.CnameRecord("record", new()
    ///     {
    ///         Domain = "foo.com",
    ///         Target = "bar.com",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import pihole:index/cnameRecord:CnameRecord record foo.com
    /// ```
    /// </summary>
    [PiholeResourceType("pihole:index/cnameRecord:CnameRecord")]
    public partial class CnameRecord : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Domain to create a CNAME record for
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Value of the CNAME record where traffic will be directed to from the configured domain value
        /// </summary>
        [Output("target")]
        public Output<string> Target { get; private set; } = null!;


        /// <summary>
        /// Create a CnameRecord resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CnameRecord(string name, CnameRecordArgs args, CustomResourceOptions? options = null)
            : base("pihole:index/cnameRecord:CnameRecord", name, args ?? new CnameRecordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CnameRecord(string name, Input<string> id, CnameRecordState? state = null, CustomResourceOptions? options = null)
            : base("pihole:index/cnameRecord:CnameRecord", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/unmango/pulumi-pihole",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CnameRecord resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CnameRecord Get(string name, Input<string> id, CnameRecordState? state = null, CustomResourceOptions? options = null)
        {
            return new CnameRecord(name, id, state, options);
        }
    }

    public sealed class CnameRecordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain to create a CNAME record for
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Value of the CNAME record where traffic will be directed to from the configured domain value
        /// </summary>
        [Input("target", required: true)]
        public Input<string> Target { get; set; } = null!;

        public CnameRecordArgs()
        {
        }
        public static new CnameRecordArgs Empty => new CnameRecordArgs();
    }

    public sealed class CnameRecordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain to create a CNAME record for
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Value of the CNAME record where traffic will be directed to from the configured domain value
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        public CnameRecordState()
        {
        }
        public static new CnameRecordState Empty => new CnameRecordState();
    }
}
