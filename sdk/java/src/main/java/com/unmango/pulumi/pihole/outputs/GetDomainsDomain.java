// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.pulumi.pihole.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsDomain {
    private String comment;
    private String domain;
    private Boolean enabled;
    private List<Integer> groupIds;
    private Integer id;
    private String type;
    private Boolean wildcard;

    private GetDomainsDomain() {}
    public String comment() {
        return this.comment;
    }
    public String domain() {
        return this.domain;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public List<Integer> groupIds() {
        return this.groupIds;
    }
    public Integer id() {
        return this.id;
    }
    public String type() {
        return this.type;
    }
    public Boolean wildcard() {
        return this.wildcard;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsDomain defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String comment;
        private String domain;
        private Boolean enabled;
        private List<Integer> groupIds;
        private Integer id;
        private String type;
        private Boolean wildcard;
        public Builder() {}
        public Builder(GetDomainsDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.comment = defaults.comment;
    	      this.domain = defaults.domain;
    	      this.enabled = defaults.enabled;
    	      this.groupIds = defaults.groupIds;
    	      this.id = defaults.id;
    	      this.type = defaults.type;
    	      this.wildcard = defaults.wildcard;
        }

        @CustomType.Setter
        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder groupIds(List<Integer> groupIds) {
            this.groupIds = Objects.requireNonNull(groupIds);
            return this;
        }
        public Builder groupIds(Integer... groupIds) {
            return groupIds(List.of(groupIds));
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder wildcard(Boolean wildcard) {
            this.wildcard = Objects.requireNonNull(wildcard);
            return this;
        }
        public GetDomainsDomain build() {
            final var _resultValue = new GetDomainsDomain();
            _resultValue.comment = comment;
            _resultValue.domain = domain;
            _resultValue.enabled = enabled;
            _resultValue.groupIds = groupIds;
            _resultValue.id = id;
            _resultValue.type = type;
            _resultValue.wildcard = wildcard;
            return _resultValue;
        }
    }
}
