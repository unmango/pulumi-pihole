// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.unmango.pulumi.pihole.outputs;

import com.pulumi.core.annotations.CustomType;
import com.unmango.pulumi.pihole.outputs.GetDomainsDomain;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsResult {
    /**
     * @return Domains
     * 
     */
    private List<GetDomainsDomain> domains;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Filter on allowed or denied domains. Must be either &#39;allow&#39; or &#39;deny&#39;.
     * 
     */
    private @Nullable String type;

    private GetDomainsResult() {}
    /**
     * @return Domains
     * 
     */
    public List<GetDomainsDomain> domains() {
        return this.domains;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Filter on allowed or denied domains. Must be either &#39;allow&#39; or &#39;deny&#39;.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDomainsDomain> domains;
        private String id;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetDomainsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domains = defaults.domains;
    	      this.id = defaults.id;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder domains(List<GetDomainsDomain> domains) {
            this.domains = Objects.requireNonNull(domains);
            return this;
        }
        public Builder domains(GetDomainsDomain... domains) {
            return domains(List.of(domains));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetDomainsResult build() {
            final var _resultValue = new GetDomainsResult();
            _resultValue.domains = domains;
            _resultValue.id = id;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
