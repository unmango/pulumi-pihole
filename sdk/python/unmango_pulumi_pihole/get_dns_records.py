# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDnsRecordsResult',
    'AwaitableGetDnsRecordsResult',
    'get_dns_records',
]

@pulumi.output_type
class GetDnsRecordsResult:
    """
    A collection of values returned by getDnsRecords.
    """
    def __init__(__self__, id=None, records=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if records and not isinstance(records, list):
            raise TypeError("Expected argument 'records' to be a list")
        pulumi.set(__self__, "records", records)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def records(self) -> Sequence['outputs.GetDnsRecordsRecordResult']:
        """
        List of Pi-hole DNS records
        """
        return pulumi.get(self, "records")


class AwaitableGetDnsRecordsResult(GetDnsRecordsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDnsRecordsResult(
            id=self.id,
            records=self.records)


def get_dns_records(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDnsRecordsResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_pihole as pihole

    records = pihole.get_dns_records()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('pihole:index/getDnsRecords:getDnsRecords', __args__, opts=opts, typ=GetDnsRecordsResult).value

    return AwaitableGetDnsRecordsResult(
        id=pulumi.get(__ret__, 'id'),
        records=pulumi.get(__ret__, 'records'))
