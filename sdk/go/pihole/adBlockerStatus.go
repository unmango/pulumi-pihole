// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pihole

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/unmango/pulumi-pihole/sdk/go/pihole/internal"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/unmango/pulumi-pihole/sdk/go/pihole"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := pihole.NewAdBlockerStatus(ctx, "status", &pihole.AdBlockerStatusArgs{
//				Enabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AdBlockerStatus struct {
	pulumi.CustomResourceState

	// Whether to enable the Pi-hole ad blocker
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
}

// NewAdBlockerStatus registers a new resource with the given unique name, arguments, and options.
func NewAdBlockerStatus(ctx *pulumi.Context,
	name string, args *AdBlockerStatusArgs, opts ...pulumi.ResourceOption) (*AdBlockerStatus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AdBlockerStatus
	err := ctx.RegisterResource("pihole:index/adBlockerStatus:AdBlockerStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAdBlockerStatus gets an existing AdBlockerStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAdBlockerStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AdBlockerStatusState, opts ...pulumi.ResourceOption) (*AdBlockerStatus, error) {
	var resource AdBlockerStatus
	err := ctx.ReadResource("pihole:index/adBlockerStatus:AdBlockerStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AdBlockerStatus resources.
type adBlockerStatusState struct {
	// Whether to enable the Pi-hole ad blocker
	Enabled *bool `pulumi:"enabled"`
}

type AdBlockerStatusState struct {
	// Whether to enable the Pi-hole ad blocker
	Enabled pulumi.BoolPtrInput
}

func (AdBlockerStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*adBlockerStatusState)(nil)).Elem()
}

type adBlockerStatusArgs struct {
	// Whether to enable the Pi-hole ad blocker
	Enabled bool `pulumi:"enabled"`
}

// The set of arguments for constructing a AdBlockerStatus resource.
type AdBlockerStatusArgs struct {
	// Whether to enable the Pi-hole ad blocker
	Enabled pulumi.BoolInput
}

func (AdBlockerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*adBlockerStatusArgs)(nil)).Elem()
}

type AdBlockerStatusInput interface {
	pulumi.Input

	ToAdBlockerStatusOutput() AdBlockerStatusOutput
	ToAdBlockerStatusOutputWithContext(ctx context.Context) AdBlockerStatusOutput
}

func (*AdBlockerStatus) ElementType() reflect.Type {
	return reflect.TypeOf((**AdBlockerStatus)(nil)).Elem()
}

func (i *AdBlockerStatus) ToAdBlockerStatusOutput() AdBlockerStatusOutput {
	return i.ToAdBlockerStatusOutputWithContext(context.Background())
}

func (i *AdBlockerStatus) ToAdBlockerStatusOutputWithContext(ctx context.Context) AdBlockerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdBlockerStatusOutput)
}

// AdBlockerStatusArrayInput is an input type that accepts AdBlockerStatusArray and AdBlockerStatusArrayOutput values.
// You can construct a concrete instance of `AdBlockerStatusArrayInput` via:
//
//	AdBlockerStatusArray{ AdBlockerStatusArgs{...} }
type AdBlockerStatusArrayInput interface {
	pulumi.Input

	ToAdBlockerStatusArrayOutput() AdBlockerStatusArrayOutput
	ToAdBlockerStatusArrayOutputWithContext(context.Context) AdBlockerStatusArrayOutput
}

type AdBlockerStatusArray []AdBlockerStatusInput

func (AdBlockerStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdBlockerStatus)(nil)).Elem()
}

func (i AdBlockerStatusArray) ToAdBlockerStatusArrayOutput() AdBlockerStatusArrayOutput {
	return i.ToAdBlockerStatusArrayOutputWithContext(context.Background())
}

func (i AdBlockerStatusArray) ToAdBlockerStatusArrayOutputWithContext(ctx context.Context) AdBlockerStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdBlockerStatusArrayOutput)
}

// AdBlockerStatusMapInput is an input type that accepts AdBlockerStatusMap and AdBlockerStatusMapOutput values.
// You can construct a concrete instance of `AdBlockerStatusMapInput` via:
//
//	AdBlockerStatusMap{ "key": AdBlockerStatusArgs{...} }
type AdBlockerStatusMapInput interface {
	pulumi.Input

	ToAdBlockerStatusMapOutput() AdBlockerStatusMapOutput
	ToAdBlockerStatusMapOutputWithContext(context.Context) AdBlockerStatusMapOutput
}

type AdBlockerStatusMap map[string]AdBlockerStatusInput

func (AdBlockerStatusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdBlockerStatus)(nil)).Elem()
}

func (i AdBlockerStatusMap) ToAdBlockerStatusMapOutput() AdBlockerStatusMapOutput {
	return i.ToAdBlockerStatusMapOutputWithContext(context.Background())
}

func (i AdBlockerStatusMap) ToAdBlockerStatusMapOutputWithContext(ctx context.Context) AdBlockerStatusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AdBlockerStatusMapOutput)
}

type AdBlockerStatusOutput struct{ *pulumi.OutputState }

func (AdBlockerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AdBlockerStatus)(nil)).Elem()
}

func (o AdBlockerStatusOutput) ToAdBlockerStatusOutput() AdBlockerStatusOutput {
	return o
}

func (o AdBlockerStatusOutput) ToAdBlockerStatusOutputWithContext(ctx context.Context) AdBlockerStatusOutput {
	return o
}

// Whether to enable the Pi-hole ad blocker
func (o AdBlockerStatusOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AdBlockerStatus) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

type AdBlockerStatusArrayOutput struct{ *pulumi.OutputState }

func (AdBlockerStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AdBlockerStatus)(nil)).Elem()
}

func (o AdBlockerStatusArrayOutput) ToAdBlockerStatusArrayOutput() AdBlockerStatusArrayOutput {
	return o
}

func (o AdBlockerStatusArrayOutput) ToAdBlockerStatusArrayOutputWithContext(ctx context.Context) AdBlockerStatusArrayOutput {
	return o
}

func (o AdBlockerStatusArrayOutput) Index(i pulumi.IntInput) AdBlockerStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AdBlockerStatus {
		return vs[0].([]*AdBlockerStatus)[vs[1].(int)]
	}).(AdBlockerStatusOutput)
}

type AdBlockerStatusMapOutput struct{ *pulumi.OutputState }

func (AdBlockerStatusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AdBlockerStatus)(nil)).Elem()
}

func (o AdBlockerStatusMapOutput) ToAdBlockerStatusMapOutput() AdBlockerStatusMapOutput {
	return o
}

func (o AdBlockerStatusMapOutput) ToAdBlockerStatusMapOutputWithContext(ctx context.Context) AdBlockerStatusMapOutput {
	return o
}

func (o AdBlockerStatusMapOutput) MapIndex(k pulumi.StringInput) AdBlockerStatusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AdBlockerStatus {
		return vs[0].(map[string]*AdBlockerStatus)[vs[1].(string)]
	}).(AdBlockerStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AdBlockerStatusInput)(nil)).Elem(), &AdBlockerStatus{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdBlockerStatusArrayInput)(nil)).Elem(), AdBlockerStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AdBlockerStatusMapInput)(nil)).Elem(), AdBlockerStatusMap{})
	pulumi.RegisterOutputType(AdBlockerStatusOutput{})
	pulumi.RegisterOutputType(AdBlockerStatusArrayOutput{})
	pulumi.RegisterOutputType(AdBlockerStatusMapOutput{})
}
